// Code generated by MockGen. DO NOT EDIT.
// Source: transactions.go

// Package mock_gateway is a generated GoMock package.
package mock_gateway

import (
	reflect "reflect"
	entity "transactions_app/entity"

	gomock "github.com/golang/mock/gomock"
)

// MockTransactionGateway is a mock of TransactionGateway interface.
type MockTransactionGateway struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionGatewayMockRecorder
}

// MockTransactionGatewayMockRecorder is the mock recorder for MockTransactionGateway.
type MockTransactionGatewayMockRecorder struct {
	mock *MockTransactionGateway
}

// NewMockTransactionGateway creates a new mock instance.
func NewMockTransactionGateway(ctrl *gomock.Controller) *MockTransactionGateway {
	mock := &MockTransactionGateway{ctrl: ctrl}
	mock.recorder = &MockTransactionGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransactionGateway) EXPECT() *MockTransactionGatewayMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockTransactionGateway) Create(transaction *entity.Transaction) (*entity.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", transaction)
	ret0, _ := ret[0].(*entity.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockTransactionGatewayMockRecorder) Create(transaction interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockTransactionGateway)(nil).Create), transaction)
}

// GetTransactionById mocks base method.
func (m *MockTransactionGateway) GetTransactionById(id int) (*entity.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransactionById", id)
	ret0, _ := ret[0].(*entity.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransactionById indicates an expected call of GetTransactionById.
func (mr *MockTransactionGatewayMockRecorder) GetTransactionById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransactionById", reflect.TypeOf((*MockTransactionGateway)(nil).GetTransactionById), id)
}

// GetTransactions mocks base method.
func (m *MockTransactionGateway) GetTransactions() ([]entity.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransactions")
	ret0, _ := ret[0].([]entity.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransactions indicates an expected call of GetTransactions.
func (mr *MockTransactionGatewayMockRecorder) GetTransactions() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransactions", reflect.TypeOf((*MockTransactionGateway)(nil).GetTransactions))
}
